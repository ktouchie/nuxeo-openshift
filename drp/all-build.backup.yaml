apiVersion: v1
items:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: blob-replicator-build
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: blob-replicator-build:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: https://github.com/tiry/nuxeo-blob-replicator
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: openshift/wildfly-101-centos7
        incremental: true
      type: Source
    triggers:
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: ha-test
    name: chaos-build
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: chaos-build:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: k8s-chaos-monkey
      git:
        ref: master
        uri: https://github.com/nuxeo-sandbox/nuxeo-ha-test
      type: Git
    strategy:
      dockerStrategy:
        forcePull: true
        from:
          kind: DockerImage
          name: golang:onbuild
      type: Docker
    triggers: []
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: elasticsearch-assemble
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: elasticsearch:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: "FROM docker.elastic.co/elasticsearch/elasticsearch:5.6.5\nCOPY
        /releases/elasticsearch-cloud-kubernetes-5.6.5.zip /tmp\nRUN /usr/share/elasticsearch/bin/elasticsearch-plugin
        install file:///tmp/elasticsearch-cloud-kubernetes-5.6.5.zip --verbose\nENV
        ES_HEAP_SIZE 512m\nENV CLUSTER_NAME elasticsearch-default\nENV NODE_MASTER
        true\nENV NODE_DATA true\nENV HTTP_ENABLE true\nENV NETWORK_HOST _site_\nENV
        HTTP_CORS_ENABLE true\nENV HTTP_CORS_ALLOW_ORIGIN *\nENV NUMBER_OF_MASTERS
        1\nENV NUMBER_OF_SHARDS 1\nENV NUMBER_OF_REPLICAS 0    "
      images:
      - from:
          kind: ImageStreamTag
          name: elasticsearch-build:latest
        paths:
        - destinationDir: .
          sourcePath: /opt/app-root/src/target/releases
      secrets:
      - destinationDir: ./
        secret:
          name: nuxeo-connect
      type: Dockerfile
    strategy:
      dockerStrategy:
        forcePull: true
        from:
          kind: DockerImage
          name: docker.elastic.co/elasticsearch/elasticsearch:5.6.5
      type: Docker
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: elasticsearch-build:latest
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: elasticsearch-build
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: elasticsearch-build:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: https://github.com/dmetzler/elasticsearch-cloud-kubernetes
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: openshift/wildfly-101-centos7
        incremental: true
      type: Source
    triggers:
    - type: ConfigChange
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: es-connector-build
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: es-connector-build:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: nuxeo-es2kafka-connector
      git:
        ref: master
        uri: https://github.com/tiry/nuxeo-elasticsearch-replicator
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: openshift/wildfly-101-centos7
        incremental: true
      type: Source
    triggers:
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: es-kafka-connect-build
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: es-kafka-connect-build:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: kafka2es-connector
      git:
        ref: master
        uri: https://github.com/tiry/nuxeo-elasticsearch-replicator
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: openshift/wildfly-101-centos7
        incremental: true
      type: Source
    triggers:
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: ha-test
    name: gatling-injector
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: gatling-injector:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /nuxeo-activity-injector
      git:
        ref: master
        uri: https://github.com/nuxeo-sandbox/nuxeo-ha-test
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:1.1
          namespace: openshift
      type: Source
    triggers:
    - generic:
        secret: 389c87d4e7825a86
      type: Generic
    - github:
        secret: 20debfb9403339e0
      type: GitHub
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: jenkins-blueocean
    name: jenkins-blueocean
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: jenkins-blueocean:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/siamaksade/jenkins-blueocean.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: jenkins:2
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: rMX3hSc4rcsdPR9ioS22
      type: GitHub
    - generic:
        secret: oGt6uZGbE_AP4zrwVXNn
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      component: mongodb-connect
    name: mongodb-connect-assemble
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: mongodb-connect:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM solsson/kafka:1.0.0
        RUN mkdir /plugins
        COPY deployments/*with-dependencies* /plugins/
      images:
      - from:
          kind: ImageStreamTag
          name: mongodb-connect-build:latest
        paths:
        - destinationDir: .
          sourcePath: /wildfly/standalone/deployments/
      type: Dockerfile
    strategy:
      dockerStrategy:
        forcePull: true
        from:
          kind: DockerImage
          name: solsson/kafka:1.0.0
      type: Docker
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: mongodb-connect-build:latest
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      component: mongodb-connect
    name: mongodb-connect-assemble2
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: mongodb-connect:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM es-kafka-connect-build:latest
        COPY deployments/*with-dependencies* /plugins/
      images:
      - from:
          kind: ImageStreamTag
          name: es-kafka-connect-build:latest
        paths:
        - destinationDir: .
          sourcePath: /wildfly/standalone/deployments/
      type: Dockerfile
    strategy:
      dockerStrategy:
        forcePull: true
        from:
          kind: ImageStreamTag
          name: mongodb-connect:latest
      type: Docker
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: es-kafka-connect-build:latest
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      component: mongodb-connect
    name: mongodb-connect-build
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: mongodb-connect-build:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: https://github.com/dmetzler/kafka-connect-mongodb
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: openshift/wildfly-101-centos7
        incremental: true
      type: Source
    triggers:
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: nuxeo
      component: assembly
    name: nuxeo-app-assemble
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: nuxeo-nuxeo:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM nuxeo:9.3
        USER root
        COPY build /build
      images:
      - from:
          kind: ImageStreamTag
          name: nuxeo-app-build:latest
        paths:
        - destinationDir: .
          sourcePath: /build
      secrets:
      - destinationDir: ./
        secret:
          name: nuxeo-connect
      type: Dockerfile
    strategy:
      dockerStrategy:
        forcePull: true
        from:
          kind: DockerImage
          name: nuxeo:9.3
      type: Docker
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: nuxeo-app-build:latest
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: nuxeo
      component: assembly
    name: nuxeo-app-assemble2
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: nuxeo-nuxeo:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: "FROM nuxeo:9.3\nUSER root\nCOPY blob-replicator-build/* /build/artifacts
        \     "
      images:
      - from:
          kind: ImageStreamTag
          name: blob-replicator-build:latest
        paths:
        - destinationDir: blob-replicator-build
          sourcePath: /wildfly/standalone/deployments
      secrets:
      - destinationDir: ./
        secret:
          name: nuxeo-connect
      type: Dockerfile
    strategy:
      dockerStrategy:
        forcePull: true
        from:
          kind: ImageStreamTag
          name: nuxeo-nuxeo:latest
      type: Docker
    triggers: []
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: nuxeo
      component: assembly
    name: nuxeo-app-assemble3
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: nuxeo-nuxeo:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: "FROM nuxeo:9.3\nUSER root\nCOPY es-connector-build/* /build/artifacts
        \     \nCOPY ./connect.properties /opt/nuxeo/connect/connect.properties\nUSER
        1000\nRUN /build/install.sh\n# Clean credential after using it\nUSER root\nRUN
        rm -f /opt/nuxeo/connect/connect.properties\nUSER 1000"
      images:
      - from:
          kind: ImageStreamTag
          name: es-connector-build:latest
        paths:
        - destinationDir: es-connector-build
          sourcePath: /wildfly/standalone/deployments
      secrets:
      - destinationDir: ./
        secret:
          name: nuxeo-connect
      type: Dockerfile
    strategy:
      dockerStrategy:
        forcePull: true
        from:
          kind: ImageStreamTag
          name: nuxeo-nuxeo:latest
      type: Docker
    triggers: []
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: nuxeo
      component: build
    name: nuxeo-app-build
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: nuxeo-app-build:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: https://github.com/nuxeo-sandbox/nuxeo-ha-test
      secrets:
      - destinationDir: /opt/nuxeo/connect
        secret:
          name: nuxeo-connect
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: nuxeo/s2i:9.3
        incremental: true
      type: Source
    triggers:
    - type: ConfigChange
    - github:
        secret: c971f46d1fbff3a6
      type: GitHub
  status:
    lastVersion: 0
