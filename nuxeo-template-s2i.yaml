apiVersion: v1
kind: Template
message: |-
  Two nuxeo build have been created:

    * ${APPLICATION_NAME}-build: uses the s2i Nuxeo image to build Nuxeo artifacts. It publishes
      the results in the ${APPLICATION_NAME}-app-build image stream.
    * ${APPLICATION_NAME}-app-assemble: uses the artifacts of ${APPLICATION_NAME}-app-build to 
      install them into a nuxeo:${NUXEO_VERSION} image and then push it to ${APPLICATION_NAME}-nuxeo:latest
      to be deployed by the Nuxeo Cluster deployment.

metadata:  
  name: nuxeo-s2i
  namespace: openshift
  annotations:
    description: Setup chained BuildConfig to build a custom Nuxeo application based on a Github repository.
    openshift.io/display-name: Nuxeo S2i chained build
    template.openshift.io/documentation-url: https://github.com/nuxeo/nuxeo-openshift
    template.openshift.io/long-description: |-
      This templates setup a Nuxeo cluster backed by a Nuxeo backings template. 
    template.openshift.io/provider-display-name: Nuxeo
    template.openshift.io/support-url: https://answers.nuxeo.com/
    iconClass: icon-java
    tags: java, nuxeo
parameters:
  - description: The name for the application.
    name: APPLICATION_NAME
    value: nuxeo
    required: true
  - description: The URL of the repository with your Nuxeo project to build
    name: SOURCE_REPOSITORY_URL
    value: https://github.com/nuxeo/nuxeo-customer-project-sample
    required: true
  - description: The reference to checkout.
    name: SOURCE_REPOSITORY_REF
    value: "master"
    required: true
  - description: The Nuxeo version to use. Use the version of the image (latest, 9.2, 8.10...)
    name: NUXEO_VERSION
    value: "9.2"
    required: true

  - description: Github Webhook secret
    name: GITHUB_WEBHOOK_SECRET
    value: "c971f46d1fbff3a6"
    required: true
  
objects:

- apiVersion: v1
  kind: ImageStream
  metadata:          
    name: ${APPLICATION_NAME}-app-build
    labels:
      app: ${APPLICATION_NAME}
  spec: {}
  status:
    dockerImageRepository: ""    


- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: ${APPLICATION_NAME}
      component: build
    name: ${APPLICATION_NAME}-app-build
  spec:
    triggers:
    - type: ConfigChange
    - type: GitHub
      github:
        secret: ${GITHUB_WEBHOOK_SECRET}
    source:
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      type: Git
      secrets:
      - destinationDir: /opt/nuxeo/connect
        secret:
          name: nuxeo-connect
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: DockerImage
          name: 'nuxeo/s2i:${NUXEO_VERSION}'
        incremental: true      
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}-app-build:latest

- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${APPLICATION_NAME}-app-assemble
    labels:
      app: ${APPLICATION_NAME}
      component: assembly
  spec:
    source:
      dockerfile: |-
        FROM nuxeo:${NUXEO_VERSION}
        COPY build /build
        COPY ./connect.properties /opt/nuxeo/connect/connect.properties
        RUN /build/install.sh
        # Clean credential after using it
        USER root
        RUN rm -f /opt/nuxeo/connect/connect.properties
        USER 1000
      images:
        - from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}-app-build:latest
          paths:
            - destinationDir: .
              sourcePath: /build
      secrets:
        - destinationDir: ./
          secret:
            name: nuxeo-connect
      type: Dockerfile
    strategy:
      dockerStrategy:
        forcePull: true
        from:
          kind: DockerImage
          name: nuxeo:${NUXEO_VERSION}
      type: Docker
    triggers:
    - type: ImageChange
      imageChange:
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}-app-build:latest
    output:
      to:
        kind: ImageStreamTag
        name: '${APPLICATION_NAME}-nuxeo:latest'
